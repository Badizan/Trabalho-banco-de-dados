/***************TRABALHO****************/

CREATE TABLE `correcao_valor_produto` (
  `cod_correcao` int(11) NOT NULL AUTO_INCREMENT,
  `descricao` varchar(60) DEFAULT NULL,
  `percentual` decimal(11,2) DEFAULT NULL,
  `dt_inicio` date DEFAULT NULL,
  `dt_fim` date DEFAULT NULL,
  `CODIGO_CLASSIFICACAO` varchar(3) DEFAULT NULL,
  PRIMARY KEY (`cod_correcao`),
  KEY `correcao_valor_produto_classificacao_FK` (`CODIGO_CLASSIFICACAO`),
  CONSTRAINT `correcao_valor_produto_classificacao_FK` FOREIGN KEY (`CODIGO_CLASSIFICACAO`) REFERENCES `classificacao` (`CODIGO`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci



/*1) Criar uma Procedure onde, ao serem informados os parâmetros da tabela acima, grave o registro. O mesmo será utilizado para determinar o valor do produto com seu reajuste em um determinado período da sua venda.
Ex: produto X 10 reais em janeiro 2023 e fevereiro o mesmo custa 11;*/

delimiter $$
create or replace procedure adicionar_correcao_valor_produto(
in desc_parametro varchar(60),
in percent_parametro decimal(11,2),
in inicio_parametro date,
in fim_parametro date,
in classif_parametro varchar(3)
)
begin
	insert into correcao_valor_produto (descricao, percentual, dt_inicio, dt_fim, CODIGO_CLASSIFICACAO)
	values(desc_parametro, percent_parametro, inicio_parametro, fim_parametro, classif_parametro);

	select * from correcao_valor_produto;
end $$
delimiter ;

call adicionar_correcao_valor_produto('Reajuste Janeiro 2023', 1.1, '2023-01-01', '2023-01-31', '005');
call adicionar_correcao_valor_produto('Reajuste Fevereiro 2023', 1.2, '2023-02-01', '2023-02-28', '005');
call adicionar_correcao_valor_produto('Reajuste Março 2023', 1.3, '2023-03-01', '2023-03-31', '005');
call adicionar_correcao_valor_produto('Reajuste Março 2024', 1.1, '2024-03-01', '2024-03-31', '005');

/*2) Criar uma function que retorne o valor do produto atualizado conforme o período da sua venda;*/


delimiter $$
create or replace function reajustar_valor_produto(cod_v INT, cod_p INT)
returns decimal(10, 2)
begin
    declare valor_reajustado decimal(10, 2);

    select
        case
            when c.percentual is not null then (p.VALOR * p.quantidade) * c.percentual
            else p.VALOR * p.quantidade
        end into valor_reajustado
    from
        vendas v
        join itens_venda iv on v.codvenda = iv.codvenda
        join produto p on iv.codproduto = p.CODIGO
        left join correcao_valor_produto c on p.CODIGO_CLASSIFICACAO = c.CODIGO_CLASSIFICACAO
            and v.datavenda between c.dt_inicio and c.dt_fim
    where
        v.codvenda = cod_v and iv.codproduto = cod_p;

    return valor_reajustado;
end $$
delimiter ;

/*3.1) criar uma view que traga o valor atualizado do produto na data atual;*/


create or replace view vw_valor_reajustado_atual as
select
	p.CODIGO as codigo,
	p.DESCRICAO as descricao,
	p.TIPO as tipo,
	p.CODIGO_CLASSIFICACAO as codigo_classificacao,
	p.UNIDADE as unidade,
	p.VALOR as valor,
	case
		when c.percentual is not null then p.VALOR * c.percentual
		else p.VALOR
	end as ajustado
from
	produto p
left join correcao_valor_produto c on
	p.CODIGO_CLASSIFICACAO = c.CODIGO_CLASSIFICACAO
	and now() between c.dt_inicio and c.dt_fim;


/*3.2) criar uma view das vendas com o valor dos produtos atualizados por período;*/


create or replace view vw_valor_reajustado_periodo as
select
	v.codvenda,
	v.datavenda,
	p.descricao as descricao_produto,
	p.valor as valor_produto,
	(p.valor * p.quantidade) as valor_total,
	(reajustar_valor_produto(v.codvenda, iv.codproduto)) as valor_total_reajustado
from
	vendas v
join itens_venda iv on
	v.codvenda = iv.codvenda
join produto p on
	iv.codproduto = p.CODIGO
group by
	v.codvenda,
	v.datavenda,
	iv.codproduto,
	p.descricao;

/*3.3) criar uma view que retorne o valor total da venda com os produtos atualizado;*/


create or replace view vw_venda_total_reajustado as
select
	v.codvenda,
	v.datavenda,
	sum(p.valor * p.quantidade) as valor_total,
	sum(reajustar_valor_produto(v.codvenda, iv.codproduto)) as valor_total_reajustado
from
	vendas v
join itens_venda iv on
	v.codvenda = iv.codvenda
join produto p on
	iv.codproduto = p.CODIGO
group by
	v.codvenda;



SELECT * FROM correcao_valor_produto;
SELECT * FROM vw_valor_reajustado_atual;
SELECT * FROM vw_valor_reajustado_periodo;
SELECT * FROM vw_venda_total_reajustado;


/***************TRABALHO****************/